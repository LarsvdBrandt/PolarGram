services:
  apigateway:
    build:
      context: D:\repos\PolarGram\PolarGram
      dockerfile: APIGateway/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: apigateway
    ports:
    - target: 80
    - target: 443
    volumes:
    - C:\Users\larsv\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
  frontend:
    build:
      context: D:\repos\PolarGram\PolarGram
      dockerfile: ./frontend/Dockerfile
    container_name: frontend
    environment:
      CHOKIDAR_USEPOLLING: "true"
    image: frontend
    ports:
    - published: 3001
      target: 3000
    stdin_open: true
    volumes:
    - D:\repos\PolarGram\PolarGram\frontend:/app:rw
  imageapi:
    build:
      context: D:\repos\PolarGram\PolarGram
      dockerfile: ImageApi/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: imageapi
    ports:
    - target: 80
  servicepost:
    build:
      context: D:\repos\PolarGram\PolarGram
      dockerfile: ServicePost/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: servicepost
    ports:
    - target: 80
version: '3.4'